version: '3.3'
services:

  mongodb:
    container_name: ${MONGO_SERVICE_NAME}
    image: ${MONGO_IMAGE}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASS}
    networks:
      - mynetwork

  mongo-express:
    container_name: ${MONGO_MANAGE_SERVICE_NAME}
    image: ${MONGO_MANAGE_IMAGE}
    restart: always
    ports:
      - ${MONGO_MANAGE_PORT}:${MONGO_MANAGE_PORT}
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_MANAGE_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_MANAGE_PASS}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASS}@${MONGO_HOST}:${MONGO_PORT}/
    networks:
      - mynetwork

  web:
    container_name: ${COMPOSE_PROJECT_NAME}
    #image: patikadev_web
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - 3000:3000
    environment:
      # Environment vars used for pg node module
      PORT: 3000
    depends_on:
      - mongodb
    links:
      - mongodb:mongodb
    volumes:
      - /f/dev/nodejsyeni:/data/app/
      - /f/dev/nodejsyeni/node_modules:/data/node_modules/
    networks:
      - mynetwork
    command: npm run dev
networks:
  mynetwork:
    driver: bridge
